{"version":3,"sources":["img/logo.svg","components/header/header.jsx","components/start/start.jsx","components/modal/modal.jsx","components/question/question.jsx","components/questionsWrap/questionsWrap.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","Logo","alt","onClick","e","showModal","Start","runQuiz","Modal","console","log","closeModal","modalData","modalText","Question","type","questionData","title","questionTitle","content","answers","answersData","answersVisible","map","item","key","image","text","closeAnwsers","answer","i","QuestionsWrap","_moveToNext","currQuestion","state","currNum","nextQuestion","nextNum","isZeroActive","isLastActive","numberOfQuestions","questionsTemp","questions","setNewValue","visible","removeOldValue","setState","previousNum","questionNumber","nextDisabled","previousDisabled","_backToPrev","prevQuestion","_showAnswers","_renderQuestion","question","questionObject","answersObject","id","order","questionID","this","disabled","Component","App","_handleShowModal","modalType","modalOpened","_handleCloseModal","modalNumberValue","_startQuiz","quizStarted","modals","modalVisible","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f93e9a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9043c833.svg\";","import React from 'react';\nimport './header.scss';\nimport Logo from '../../img/logo.svg';\n\nexport const Header = (props) => {\n  return(\n    <header className=\"header\">\n      <div className=\"content\">\n        <div className=\"logo\"><img src={Logo} alt=\"Logo\"/></div>\n        <ul className=\"jokers\">\n          <li><button onClick={(e) => props.showModal('jokersModal')}><span><i className=\"fa fa-angle-right\"></i>Jokers</span></button></li>\n          <li><button onClick={(e) => props.showModal('rulesModal')}><span><i className=\"fa fa-angle-right\"></i>Rules</span></button></li>\n          <li><button><span><i className=\"fa fa-angle-right\"></i>Admin</span></button></li>\n        </ul>\n      </div>\n    </header>\n  )\n}","import React from 'react';\nimport './start.scss';\n\nexport const Start = (props) => {\n  return(\n    <div className=\"container inital-screen\">\n      <div className=\"content\">\n        <h1>RNS<br/>&<br/>Homework Hub<br/>Quiz</h1>\n        <button className=\"btn btn-red\" onClick={(e) => props.runQuiz()}>Start</button>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './modal.css';\n\nexport const Modal = (props) => {\n  console.log(props);\n  \n  return(\n    <div className=\"container modal\">\n      <button className=\"close-modal\" onClick={(e) => props.closeModal(e)}><i className=\"fa fa-times\"></i></button>\n      <div className=\"content\">\n        <div className=\"modal-text\">{props.modalData.modalText}</div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './question.scss';\n\nexport const Question = (props) => {\n  var type = props.questionData.type;\n  var title = props.questionData.questionTitle;\n  var content = props.questionData.content;\n  var answers = props.answersData;\n  var answersVisible = props.answersVisible;\n  return(\n    <div className=\"question type1 guessPerson\">\n      <div className=\"question__title\">{title}</div>\n      <div className=\"question__content\">\n       \n        { type === \"guessPerson\" &&\n          <div className=\"people\">\n          {\n            content.map(item => {\n              return <img key={item.key} src={item.image} alt=\"person\"/>\n            })  \n          }\n          </div>\n        }\n\n        { type === \"reorderItems\" &&\n          <div className=\"items-list\">\n          {\n            content.map(item => {\n              return <div key={item.key} className=\"text\">{item.text}</div>\n            })  \n          }\n          </div>\n        }\n\n        {answersVisible &&\n          <div className=\"answers\">\n            <button className=\"close-answers\" onClick={(e) => props.closeAnwsers()}><i className=\"fa fa-times\"></i></button>\n            <h5>{answers.title}:</h5>\n            {\n              answers.answer.map((answer,i) => {\n                return <div className=\"answer-item\" key={i}>{answer}</div>\n              })  \n            }\n          </div>\n        }\n\n      </div>\n    </div>\n  )\n}","import React, {Component} from 'react';\nimport './questionsWrap.scss';\nimport {Question} from '../question/question';\n\nclass QuestionsWrap extends Component{\n  constructor(){\n    super();\n    this.state = {\n      previousNum: 0,\n      nextNum: 1,\n      currNum: 0,\n      questionNumber: 1,\n      previousDisabled: true,\n      nextDisabled: false,\n      answersVisible: false,\n      questions: [\n        {\n          id: 0,\n          order: 1,\n          visible: true,\n          type: 'guessPerson',\n          questionTitle: 'Navedite imena poznatih lica sa slika',\n          content: [\n            {\n              image: \"https://tekrabuilders.com/wp-content/uploads/2018/12/male-placeholder-image.jpeg\",\n              key: 0\n            },\n            {\n              image: \"https://tekrabuilders.com/wp-content/uploads/2018/12/male-placeholder-image.jpeg\",\n              key: 1\n            },\n            {\n              image: \"https://tekrabuilders.com/wp-content/uploads/2018/12/male-placeholder-image.jpeg\",\n              key: 2\n            },\n            {\n              image: \"https://tekrabuilders.com/wp-content/uploads/2018/12/male-placeholder-image.jpeg\",\n              key: 3\n            },\n            {\n              image: \"https://tekrabuilders.com/wp-content/uploads/2018/12/male-placeholder-image.jpeg\",\n              key: 4\n            }\n          ]\n        },\n        {\n          id: 1,\n          order: 2,\n          visible: false,\n          type: 'reorderItems',\n          questionTitle: 'Sortiraj pojmove po nekom kriteriju..',\n          content: [\n            {\n              text: \"Some sort item..\",\n              key: 0\n            },\n            {\n              text: \"Some sort item 1..\",\n              key: 1\n            },\n            {\n              text: \"Some sort item 2..\",\n              key: 2\n            },\n            {\n              text: \"Some sort item 3..\",\n              key: 3\n            },\n            {\n              text: \"Some sort item 4..\",\n              key: 4\n            }\n          ]\n        }\n      ],\n      answers: [\n        {\n          id: 0,\n          title: 'Imena likova',\n          answer: ['Neki lik', 'Neki drugi lik', 'Opet neki lik', 'Sad neki opet lik', 'Ime lika']\n        },\n        {\n          id: 1,\n          title: 'Ispravan redoslijed',\n          answer: ['Odgovor 1', 'Odgovor 2', 'Odgovor 3', 'Odgovor 4', 'Odgovor 5']\n        }\n      ],\n      numberOfQuestions: 2\n    }\n  }\n\n  _moveToNext = (e) => {\n    var currQuestion = this.state.currNum;\n    var nextQuestion = this.state.nextNum;\n    var isZeroActive = true;\n    var isLastActive = false;\n    \n    if(nextQuestion+1 === this.state.numberOfQuestions) isLastActive = true;\n    else isLastActive = false;\n    if(nextQuestion === 0) isZeroActive = true;\n    else isZeroActive = false;\n\n    let questionsTemp = [...this.state.questions];\n    let setNewValue = {\n      ...questionsTemp[nextQuestion],\n      visible: true\n    }\n    let removeOldValue = {\n      ...questionsTemp[currQuestion],\n      visible: false\n    }\n    questionsTemp[currQuestion] = removeOldValue;\n    questionsTemp[nextQuestion] = setNewValue;\n    this.setState({\n      previousNum: this.state.previousNum + 1,\n      nextNum: this.state.nextNum + 1,\n      currNum: this.state.currNum + 1,\n      questionNumber: this.state.questionNumber + 1,\n      questions: questionsTemp,\n      nextDisabled: isLastActive,\n      previousDisabled: isZeroActive,\n      answersVisible: false \n    })\n  }\n\n  _backToPrev = (e) => {\n    var currQuestion = this.state.currNum;\n    var prevQuestion = this.state.currNum - 1;\n    var isZeroActive = true;\n    var isLastActive = false;\n    \n    if(currQuestion-1 === 0) isZeroActive = true;\n    else isZeroActive = false;\n\n    let questionsTemp = [...this.state.questions];\n    let setNewValue = {\n      ...questionsTemp[prevQuestion],\n      visible: true\n    }\n    let removeOldValue = {\n      ...questionsTemp[currQuestion],\n      visible: false\n    }\n    questionsTemp[currQuestion] = removeOldValue;\n    questionsTemp[prevQuestion] = setNewValue;\n    this.setState({\n      previousNum: this.state.previousNum - 1,\n      nextNum: this.state.nextNum - 1,\n      currNum: this.state.currNum - 1,\n      questionNumber: this.state.questionNumber - 1,\n      questions: questionsTemp,\n      previousDisabled: isZeroActive,\n      nextDisabled: isLastActive,\n      answersVisible: false \n    })\n  }\n  _showAnswers = () => {\n    this.setState({\n      answersVisible: !this.state.answersVisible \n    })\n  }\n  _renderQuestion = (question) => {\n    var questionObject = this.state.questions[question];\n    var answersObject = this.state.answers[question];\n    const {answersVisible} = this.state;\n\n    return(\n      <Question questionData={questionObject} answersData={answersObject} answersVisible={answersVisible} closeAnwsers={this._showAnswers}/>\n    )\n  }\n\n  render(){\n    const { questionNumber, questions, previousDisabled, nextDisabled} = this.state;\n    var questionID;\n    return(\n      <div className=\"container questions-wrap\">\n      <div className=\"question-number\">{questionNumber}.</div>\n      <div className=\"content\">\n\n        <div className=\"questions\">\n          {\n            questions.map(question => {\n              if(question.visible) questionID = question.id;\n            })    \n          }\n          {\n            this._renderQuestion(questionID)\n          }\n        </div>\n\n        <div className=\"questions-nav\">\n          <button className=\"btn btn-red\" disabled={previousDisabled} onClick={(e) => this._backToPrev()}>Previous</button>\n          <button className=\"btn btn-blue\" disabled={nextDisabled} onClick={(e) => this._moveToNext()}>Next</button>\n\n          <button className=\"circle-btn\" onClick={(e) => this._showAnswers()}><i className=\"fa fa-question-circle\"></i></button>\n        </div>\n      </div>\n    </div>  \n    )\n  }\n\n}\n\nexport default QuestionsWrap;","import React, { Component } from 'react';\nimport './App.scss';\nimport Logo from './img/logo.svg';\nimport {Header} from './components/header/header';\nimport {Start} from './components/start/start';\nimport {Modal} from './components/modal/modal';\nimport QuestionsWrap from './components/questionsWrap/questionsWrap';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      showModal: false,\n      quizStarted: false,\n      modalNumberValue: -1,\n      modalOpened: 0,\n      modals: [\n        {\n          modalText: 'upute za jokereeee'\n        },\n        {\n          modalText: 'pravila igrice'\n        }\n      ]\n    }\n  }\n  _handleShowModal = (modalType) => {\n    var modalOpened;\n    if(modalType === 'jokersModal') modalOpened = 0;\n    else modalOpened = 1;\n\n    this.setState({\n      showModal: true,\n      modalOpened: modalOpened\n    })\n  }\n  _handleCloseModal = () => {\n    this.setState({\n      modalNumberValue: -1,\n      showModal: false\n    })  \n  }\n  _startQuiz = () => {\n    this.setState({\n      quizStarted: !this.state.quizStarted\n    })\n  }\n\n  render(){\n    const {showModal, modals, quizStarted, modalOpened} = this.state;\n    return (\n      <div className=\"app\">\n\n        <div className=\"mobileOverlay\">\n          <div className=\"logo\"><img src={Logo} alt=\"Logo\"/></div>\n          <div className=\"text\"> Sry <br/> desktop only <br/></div>\n          <i className=\"fas fa-poo\"></i>\n        </div>\n\n        { showModal && \n          <Modal \n            modalVisible={showModal} \n            modalData={modals[modalOpened]} \n            closeModal={this._handleCloseModal}/>\n        }\n\n        <Header showModal={this._handleShowModal}/>\n        <div className=\"app__content\">\n          { !quizStarted &&\n            <Start runQuiz={this._startQuiz}/>\n          }\n          { quizStarted &&\n            <QuestionsWrap/>\n          }\n        </div>\n\n      </div>\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}